package evaluation;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.CallableStatement;
import java.sql.Types;


public class Login {
    private JPasswordField passwordFieldPassword;
    private JTextField textFieldUsername;
    private JComboBox comboBoxUsername;
    private JLabel labelPassword;
    private JLabel labelUsername;
    public JPanel panelLogin;
    private JPanel panelPrompt;
    private JButton buttonLogin;
    private static JFrame frame = null;

    private Connection conn = null;

    public Login() {
        conn = CheckConnection.ConnectDb();
        populate();

        buttonLogin.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                String u = textFieldUsername.getText();
                String p = passwordFieldPassword.getText();
                login(u, p);
            }
        });
        comboBoxUsername.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent itemEvent) {
                Object item = comboBoxUsername.getSelectedItem();
                String username = ((ComboItem) item).getKey();
                textFieldUsername.setText(username);
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelLogin = new JPanel();
        panelLogin.setLayout(new GridBagLayout());
        panelLogin.setMaximumSize(new Dimension(368, 60));
        panelPrompt = new JPanel();
        panelPrompt.setLayout(new GridBagLayout());
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.NORTH;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelLogin.add(panelPrompt, gbc);
        textFieldUsername = new JTextField();
        textFieldUsername.setPreferredSize(new Dimension(150, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelPrompt.add(textFieldUsername, gbc);
        passwordFieldPassword = new JPasswordField();
        passwordFieldPassword.setPreferredSize(new Dimension(150, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelPrompt.add(passwordFieldPassword, gbc);
        labelUsername = new JLabel();
        labelUsername.setText("Username:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panelPrompt.add(labelUsername, gbc);
        labelPassword = new JLabel();
        labelPassword.setText("Password:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        panelPrompt.add(labelPassword, gbc);
        comboBoxUsername = new JComboBox();
        comboBoxUsername.setPreferredSize(new Dimension(150, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelPrompt.add(comboBoxUsername, gbc);
        buttonLogin = new JButton();
        buttonLogin.setText("Login");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelPrompt.add(buttonLogin, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelPrompt.add(spacer1, gbc);
        labelUsername.setLabelFor(comboBoxUsername);
        labelPassword.setLabelFor(textFieldUsername);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelLogin;
    }

    public static void show() {
        frame = new JFrame("Login");
        frame.setContentPane(new Login().panelLogin);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
        frame.setResizable(false);
    }

    private void populate() {
        try {
            String q = "SELECT username, name, surname FROM user";
            Statement s = conn.createStatement();
            ResultSet r = s.executeQuery(q);
            while (r.next()) {
                comboBoxUsername.addItem(
                        new ComboItem(
                                r.getString(1),
                                r.getString(2) + " " + r.getString(3)));
            }
            r.close();
            s.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(panelLogin, e.toString());
        }
    }

    private void login(String username, String password) {
        try {
            CallableStatement cs = conn.prepareCall("{call proc_login_user(?, ?, ?)}");
            cs.setString("in_username", username);
            cs.setString("in_password", password);
            cs.registerOutParameter("out_role", Types.VARCHAR);
            boolean hasResults = cs.execute();
            String role = cs.getString("out_role");
            cs.close();
            switch (role) {
                case "administrator":
                    Administrator.show(username, role);
                    conn.close();
                    frame.dispose();
                    break;
                case "manager":
                    Manager.show();
                    conn.close();
                    frame.dispose();
                    break;
                case "evaluator":
                    Evaluator.show();
                    conn.close();
                    frame.dispose();
                    break;
                case "employee":
                    Employee.show();
                    conn.close();
                    frame.dispose();
                    break;
                case "unregistered":
                    JOptionPane.showMessageDialog(panelLogin, "User does not exist or wrong password.");
                    break;
                case "unspecified":
                    JOptionPane.showMessageDialog(panelLogin, "User has no role associated with it.");
                    break;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(panelLogin, e.toString());
        }
    }
}
